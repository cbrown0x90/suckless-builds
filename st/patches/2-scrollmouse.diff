diff -Naur tmp/config.def.h ../../st-0.6/tmp/config.def.h
--- tmp/config.def.h	2016-06-04 22:53:18.910858703 -0400
+++ ../../st-0.6/tmp/config.def.h	2016-06-04 22:53:02.246858307 -0400
@@ -109,10 +109,17 @@
 /* Beware that overloading Button1 will disable the selection. */
 static Mousekey mshortcuts[] = {
 	/* button               mask            string */
-	{ Button4,              XK_ANY_MOD,     "\031" },
-	{ Button5,              XK_ANY_MOD,     "\005" },
+	{ Button4,              XK_NO_MOD,     "\031" },
+	{ Button5,              XK_NO_MOD,     "\005" },
 };
 
+static MouseKey mkeys[] = {
+	/* button               mask            function        argument */
+	{ Button4,              ShiftMask,      kscrollup,      {.i =  1} },
+	{ Button5,              ShiftMask,      kscrolldown,    {.i =  1} },
+ };
+
+
 /* Internal keyboard shortcuts. */
 #define MODKEY Mod1Mask
 
diff -Naur tmp/st.c ../../st-0.6/tmp/st.c
--- tmp/st.c	2016-06-04 22:53:18.910858703 -0400
+++ ../../st-0.6/tmp/st.c	2016-06-04 22:53:02.246858307 -0400
@@ -297,6 +297,14 @@
 } Arg;
 
 typedef struct {
+uint b;
+	uint mask;
+	void (*func)(const Arg *);
+	const Arg arg;
+} MouseKey;
+
+typedef struct {
+
 	uint mod;
 	KeySym keysym;
 	void (*func)(const Arg *);
@@ -911,21 +919,22 @@
 void
 bpress(XEvent *e) {
 	struct timespec now;
-	Mousekey *mk;
+	MouseKey *mk;
 
 	if(IS_SET(MODE_MOUSE) && !(e->xbutton.state & forceselmod)) {
 		mousereport(e);
 		return;
 	}
 
-	for(mk = mshortcuts; mk < mshortcuts + LEN(mshortcuts); mk++) {
-		if(e->xbutton.button == mk->b
+	for (mk = mkeys; mk < mkeys + LEN(mkeys); mk++) {
+		if (e->xbutton.button == mk->b
 				&& match(mk->mask, e->xbutton.state)) {
-			ttysend(mk->s, strlen(mk->s));
+			mk->func(&mk->arg);
 			return;
 		}
 	}
 
+
 	if(e->xbutton.button == Button1) {
 		clock_gettime(CLOCK_MONOTONIC, &now);
 
